# -*- coding: utf-8 -*-
"""python_task_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-ao97bBIf3qgZJGS7lQjhBvyZZWG74rj

**Question No 1**
"""

#dataset1 = '/content/dataset-1.csv'

# importing the libiaries
import pandas as pd
import numpy as np

def get_car_matrix(dataset)->pd.DataFrame:
  #crrating a data frame
  df = pd.read_csv(dataset)
  #creating a car_matrix with index as id1 and columns as id2
  car_matrix = df.pivot(index = 'id_1',columns = "id_2",values = "car")
  #logic to set diagaonal values to zero
  np.fill_diagonal(car_matrix.values,0)

  #return the matirx
  return car_matrix

#get_car_matrix(dataset1)

"""**Question No 2**"""

def get_type_count(dataset)->pd.DataFrame:
  #creating a data frame
  df= pd.read_csv(dataset)
  #creating a new column of categorical type and assigning value to column
  df.loc[df['car']<=15 ,'car_type'] = 'low'
  df.loc[(df['car']>15) & (df['car']<=25) , 'car_type'] = 'medium'
  df.loc[df['car']>25, 'car_type'] = 'high'
  #countung the car_tye
  car_type_count = df['car_type'].value_counts().to_dict()

  #sorting the cartype_count
  sort_car_type_count =  dict(sorted(car_type_count.items()))

  #return the result
  return(sort_car_type_count)


#get_type_count(dataset1)

"""**Question 3**"""

def get_bus_indexes(dataset)->list:
  #creating the dataframe
  df= pd.read_csv(dataset)
  #calucalting the bus column value mean
  bus_mean_value = df['bus'].mean()
  #creating the a list of bus values are greathe the twicw of mean of bus value
  bus_indexlist = df[df['bus']> 2 * bus_mean_value].index.tolist()
  #sorte the resule lis
  sort_result = sorted(bus_indexlist)

  #return the result
  return sort_result

#get_bus_indexes(dataset1)

"""**Question 4**"""

def fillter_routes(dataset):
  #creating a data frame
  df = pd.read_csv(dataset)
  #filtering the dataframe
  avg_truck_route = df.groupby('route')['truck'].mean()
  #list where atruck route isgreate than  7
  route_list = avg_truck_route[avg_truck_route > 7].index.tolist()
  #sort hte list in ascending oder
  sort_list = route_list.sort()
  #return the sortlist
  return sort_list

#fillter_routes(dataset1)

"""**Question 5**"""

import pandas as pd

def multiply_matrix(car_matrix):
    # Copy the input DataFrame to avoid modifying the original
    modified_matrix = car_matrix.copy()

    # Apply the specified logic to modify values
    modified_matrix[modified_matrix > 20] =  modified_matrix[modified_matrix > 20] *0.75
    modified_matrix[modified_matrix <= 20] =  modified_matrix[modified_matrix <=20] *1.25

    # Round values to 1 decimal place
    modified_matrix = modified_matrix.round(1)

    return modified_matrix


#car_matrix = get_car_matrix() # input the data set
#multiply_matrix(car_matrix)   #final ouput

"""**Question 6**"""

df= pd.read_csv('/content/dataset-2.csv')
df

